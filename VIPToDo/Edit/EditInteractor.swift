//
//  EditInteractor.swift
//  VIPToDo
//
//  Created by Seokho on 2020/09/08.
//  Copyright (c) 2020 Seokho. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EditBusinessLogic {
	func showTitle()
	func addData(request: Edit.Add.Request)
}

protocol EditDataStore {
	var defaultText: String? { get set }
	var service: CoreDataService? { get set }
}

class EditInteractor: EditBusinessLogic, EditDataStore {

	var defaultText: String?
	var service: CoreDataService? {
		didSet {
			guard let service = self.service else {
				preconditionFailure()
			}
			
			self.worker = EditWorker(service: service)
		}
	}
	
	var presenter: EditPresentationLogic?
	var worker: EditWorker?
	
	
	func showTitle() {
		let response = Edit.GetTitle.Response(title: defaultText)
		presenter?.presentTitle(response: response)
	}
	
	
	func addData(request: Edit.Add.Request) {
		
		worker?.addData(title: request.title) { result in
			switch result {
			case .success:
				self.presenter?.presentDismiss(response: Edit.Add.Response())
			case .failure(let error):
				self.presenter?.presentErrorAlert(response: Edit.ErrorData.Response(error: error))
			}
		}
		
	}
	
	
}
